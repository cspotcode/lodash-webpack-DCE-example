import assign from './assign';
import assignIn from './assignIn';
import assignInWith from './assignInWith';
import assignWith from './assignWith';
import create from './create';
import defaults from './defaults';
import defaultsDeep from './defaultsDeep';
import extend from './extend';
import extendWith from './extendWith';
import findKey from './findKey';
import findLastKey from './findLastKey';
import forIn from './forIn';
import forInRight from './forInRight';
import forOwn from './forOwn';
import forOwnRight from './forOwnRight';
import functions from './functions';
import functionsIn from './functionsIn';
import get from './get';
import has from './has';
import hasIn from './hasIn';
import invert from './invert';
import invertBy from './invertBy';
import invoke from './invoke';
import keys from './keys';
import keysIn from './keysIn';
import mapKeys from './mapKeys';
import mapValues from './mapValues';
import merge from './merge';
import mergeWith from './mergeWith';
import omit from './omit';
import omitBy from './omitBy';
import pick from './pick';
import pickBy from './pickBy';
import result from './result';
import set from './set';
import setWith from './setWith';
import toPairs from './toPairs';
import toPairsIn from './toPairsIn';
import transform from './transform';
import unset from './unset';
import update from './update';
import updateWith from './updateWith';
import values from './values';
import valuesIn from './valuesIn';

export default {
  assign: assign,
  assignIn: assignIn,
  assignInWith: assignInWith,
  assignWith: assignWith,
  create: create,
  defaults: defaults,
  defaultsDeep: defaultsDeep,
  extend: extend,
  extendWith: extendWith,
  findKey: findKey,
  findLastKey: findLastKey,
  forIn: forIn,
  forInRight: forInRight,
  forOwn: forOwn,
  forOwnRight: forOwnRight,
  functions: functions,
  functionsIn: functionsIn,
  get: get,
  has: has,
  hasIn: hasIn,
  invert: invert,
  invertBy: invertBy,
  invoke: invoke,
  keys: keys,
  keysIn: keysIn,
  mapKeys: mapKeys,
  mapValues: mapValues,
  merge: merge,
  mergeWith: mergeWith,
  omit: omit,
  omitBy: omitBy,
  pick: pick,
  pickBy: pickBy,
  result: result,
  set: set,
  setWith: setWith,
  toPairs: toPairs,
  toPairsIn: toPairsIn,
  transform: transform,
  unset: unset,
  update: update,
  updateWith: updateWith,
  values: values,
  valuesIn: valuesIn,
};
